#include <string>
#include <vector>
#include <queue>
#include <iostream>

using namespace std;

int solution(vector<int> priorities, int location) {
	int answer = 0;
	int count = 0;
	queue<pair<int, int>> que;
	priority_queue <int> pri_que;
	for (int i = 0; i < priorities.size(); i++) {
		que.push(make_pair(i, priorities[i]));
		pri_que.push(priorities[i]);
	}
	while (!que.empty()) {
		int index = que.front().first;
		int value = que.front().second;
		que.pop();
		if (pri_que.top() == value) {
			pri_que.pop();
			count++;
			if (index == location) {
				answer = count;
				break;
			}
		}
		else
			que.push(make_pair(index, value));
	}   
	cout << answer << endl;
	return answer;
}

int main() {
	solution({ 2,1,3,2 }, 2); //1 
	solution({ 1,1,9,1,1,1 }, 0); //5
}